@book{sbd2018, 
  place={FIX ME!!!}, 
  title={Secure by Design}, 
  publisher={FIX ME!!!}, 
  author={FIX ME!!!}, 
  year={2018}
}

@book{evans_2015, 
  place={INpolis, IN}, 
  title={Domain-driven design reference: definitions and patterns summaries}, 
  publisher={Dog Ear Publishing}, 
  author={Evans, Eric}, 
  year={2015}
}

@book{EvansEric2004Dd:t,
  publisher = "Addison-Wesley",
  isbn = "0-321-12521-5",
  year = "2004",
  title = "Domain-driven design : tackling complexity in the heart of software",
  language = "eng",
  address = "Boston, Mass.",
  author = "Evans, Eric",
  keywords = "Object-oriented programming (Computer science); Computer software -- Development; Software; Programvara",
}

@book{millett_2015, 
  place={INpolis, IN}, 
  title={Patterns, principles, and practices of domain-driven design}, 
  publisher={Wrox, a Wiley brand}, 
  author={Millett, Scott}, 
  year={2015}
}

@article{Bankes,
  abstract = {Agent-based models (ABM) are examples of complex adaptive systems, which can be characterized as those systems for which no model less complex than the system itself can accurately predict in detail how the system will behave at future times. Consequently, the standard tools of policy analysis, based as they are on devising policies that perform well on some best estimate model of the system, cannot be reliably used for ABM. This paper argues that policy analysis by using ABM requires an alternative approach to decision theory. The general characteristics of such an approach are described, and examples are provided of its application to policy analysis.},
  author = {Bankes, Steven C},
  title = {{Tools and techniques for developing policies for complex and uncertain systems Introduction: The Need for New Tools}},
  url = {http://www.pnas.org/content/99/suppl{\_}3/7263.full.pdf}
}

@InProceedings{10.1007/978-3-319-24309-2_33,
  author="Jilani, Rabia
  and Crampton, Andrew
  and Kitchin, Diane
  and Vallati, Mauro",
  editor="Gavanelli, Marco
  and Lamma, Evelina
  and Riguzzi, Fabrizio",
  title="ASCoL: A Tool for Improving Automatic Planning Domain Model Acquisition",
  booktitle="AI*IA 2015 Advances in Artificial Intelligence",
  year="2015",
  publisher="Springer International Publishing",
  address="Cham",
  pages="438--451",
  abstract="Intelligent agents solving problems in the real world require domain models containing widespread knowledge of the world.",
  isbn="978-3-319-24309-2"
}

@misc{Wilander2009,
  author = {Wilander, Johan},
  title = {{OWASP Sweden: Dom{\"{a}}ndriven s{\"{a}}kerhet / Domain-Driven Security}},
  url = {http://owaspsweden.blogspot.se/2009/09/domandriven-sakerhet-domain-driven.html},
  urldate = {2018-01-25},
  year = {2009}
}

@misc{Johnsson2009,
  author = {Johnsson, Dan Bergh},
  title = {{Dear Junior - Letters to a Junior Programmer: Introducing Domain Driven Security}},
  url = {http://dearjunior.blogspot.se/2009/09/introducing-domain-driven-security.html},
  urldate = {2018-01-25},
  year = {2009}
}

@article{Arnor2016,
  author = {Arn{\"{o}}r, Johan},
  file = {:Users/fredrikadolfsson/Library/Application Support/Mendeley Desktop/Downloaded/Arn{\"{o}}r - 2016 - Domain-Driven Security's take on Denial-of-Service (DoS) Attacks.pdf:pdf},
  pages = {54},
  title = {{Domain-Driven Security's take on Denial-of-Service (DoS) Attacks}},
  url = {http://kth.diva-portal.org/smash/get/diva2:945831/FULLTEXT01.pdf},
  year = {2016}
}

@article{Stendahl2016,
  author = {Stendahl, Jonas},
  file = {:Users/fredrikadolfsson/Library/Application Support/Mendeley Desktop/Downloaded/Unknown - Unknown - Domain-Driven Security.pdf:pdf},
  pages = {39},
  title = {{Domain-Driven Security}},
  url = {http://kth.diva-portal.org/smash/get/diva2:945707/FULLTEXT01.pdf},
  year = {2016}
}

@article{Pan2015,
  author = {Pan, Jinkun and Mao, Xiaoguang and Li, Weishi},
  doi = {10.1109/ICSESS.2015.7339024},
  file = {:Users/fredrikadolfsson/Downloads/07339024.pdf:pdf},
  isbn = {9781479983520},
  issn = {23270594},
  journal = {Proceedings of the IEEE International Conference on Software Engineering and Service Sciences, ICSESS},
  keywords = {analyst,taint analysis,taint path},
  pages = {145--148},
  title = {{Analyst-oriented taint analysis by taint path slicing and aggregation}},
  volume = {2015-November},
  year = {2015}
}

@misc{perl,
  title = {perlsec - perldoc.perl.org},
  url = {http://perldoc.perl.org/perlsec.html},
  urldate = {2018-01-25}
}

@misc{ruby,
  title = {Locking Ruby in the Safe},
  url = {http://ruby-doc.com/docs/ProgrammingRuby/html/taint.html},
  urldate = {2018-01-25}
}

@article{Ma2010,
  author = {Ma, Jianan},
  file = {:Users/fredrikadolfsson/Downloads/p99-enck.pdf:pdf},
  pages = {3},
  title = {{TaintDroid : An Information- ­ ‐ Flow Tracking System for Realtime Privacy Monitoring on Smartphones Jianan Ma Problem Contribution / Implementation Details Questions / Suggestions}},
  year = {2010}
}

@article{Venkataramani2008,
  abstract = {This paper presents FlexiTaint, a hardware accelerator for dynamic taint propagation. FlexiTaint is implemented as an in-order addition to the back-end of the processor pipeline, and the taints for memory locations are stored as a packed array in regular memory. The taint propagation scheme is specified via a software handler that, given the operation and the sourcespsila taints, computes the new taint for the result. To keep performance overheads low, FlexiTaint caches recent taint propagation lookups and uses a filter to avoid lookups for simple common-case behavior. We also describe how to implement consistent taint propagation in a multi-core environment. Our experiments show that FlexiTaint incurs average performance overheads of only 1{\%} for SPEC2000 benchmarks and 3.7{\%} for Splash-2 benchmarks, even when simultaneously following two different taint propagation policies.},
  author = {Venkataramani, Guru and Doudalis, Ioannis and Solihin, Yan and Prvulovic, Milos},
  doi = {10.1109/HPCA.2008.4658637},
  file = {:Users/fredrikadolfsson/Downloads/04658637.pdf:pdf},
  isbn = {9781424420704},
  issn = {15300897},
  journal = {Proceedings - International Symposium on High-Performance Computer Architecture},
  pages = {173--184},
  title = {{FlexiTaint: A programmable accelerator for dynamic taint propagation}},
  year = {2008}
}

@article{OWASP2017,
  author = {OWASP},
  file = {:Users/fredrikadolfsson/Downloads/OWASP{\_}Top{\_}10-2017{\_}(en).pdf.pdf:pdf},
  journal = {Owasp},
  pages = {22},
  title = {{OWASP Top 10 - The Ten Most Critical Web Application Security Risks}},
  url = {https://www.owasp.org/images/7/72/OWASP{\_}Top{\_}10-2017{\_}{\%}28en{\%}29.pdf.pdf{\%}0Ahttp://scholar.google.com/scholar?hl=en{\&}btnG=Search{\&}q=intitle:OWASP+Top+10+-2010{\#}1},
  year = {2017}
}

@misc{OpenWebApplicationSecurityProject,
  author = {{Open Web Application Security Project}},
  title = {{OWASP}},
  url = {https://www.owasp.org/index.php/Main{\_}Page},
  urldate = {2018-02-01}
}

@book{Secure_Web, 
  title={Secure Web Application Deployment Using Owasp Standards: An Expert Way of Secure Web Application Deployment}, 
  publisher={Createspace Independent Publishing Platform}, 
  author={Subbulakshmi T, Praveenkumat H}, 
  year={2017}
}

@book{JustinClarke-Salt2009SIAa,
  abstract = "<p>SQL Injection Attacks and Defense, First Edition: Winner of the Best Book Bejtlich Read Award {"} SQL injection is probably the number one problem for any server-side application, and this book unequaled in its coverage.{"} –Richard Bejtlich, Tao Security blog SQL injection represents one of the most dangerous and well-known, yet misunderstood, security vulnerabilities on the Internet, largely because there is no central repository of information available for penetration testers, IT security consultants and practitioners, and web/software developers to turn to for help. SQL Injection Attacks and Defense, Second Edition is the only book devoted exclusively to this long-established but recently growing threat. This is the definitive resource for understanding, finding, exploiting, and defending against this increasingly popular and particularly destructive type of Internet-based attack. SQL Injection Attacks and Defense, Second Edition includes all the currently known information about these attacks and significant insight from its team of SQL injection experts, who tell you about: Understanding SQL Injection – Understand what it is and how it works Find, confirm and automate SQL injection discovery Tips and tricks for finding SQL injection within code Create exploits for using SQL injection Design apps to avoid the dangers these attacks SQL injection on different databases SQL injection on different technologies SQL injection testing techniques Case Studies Securing SQL Server, Second Edition is the only book to provide a complete understanding of SQL injection, from the basics of vulnerability to discovery, exploitation, prevention, and mitigation measures. Covers unique, publicly unavailable information, by technical experts in such areas as Oracle, Microsoft SQL Server, and MySQL---including new developments for Microsoft SQL Server 2012 (Denali). Written by an established expert, author, and speaker in the field, with contributions from a team of equally renowned creators of SQL injection tools, applications, and educational materials.</p>",
  publisher = "Syngress",
  isbn = "9781597499736",
  year = "2009",
  title = "SQL Injection Attacks and Defense, 2nd Edition",
  language = "eng",
  author = "Justin Clarke-Salt",
  keywords = "Security ; Computer Science",
  month = "June",
}

@book{CrossMichael2007Dgtw,
  publisher = "Syngress Publishing",
  isbn = "1-281-06021-6",
  year = "2007",
  title = "Developer's guide to web application security",
  language = "eng",
  address = "Rockland, MA",
  author = "Cross, Michael",
}

@book{FogieSeth2007Xacs,
  abstract = "A cross site scripting attack is a very specific type of attack on a web application. It is used by hackers to mimic real sites and fool people into providing personal data.Cross Site Scripting Attacks starts by defining the terms and laying out the ground work. It assumes that the reader is familiar with basic web programming (HTML) and JavaScript. First it discusses the concepts, methodology, and technology that makes XSS a valid concern. It then moves into the various types of XSS attacks, how they are implemented, used, and abused. After XSS is thoroughly explored, the next",
  publisher = "Syngress",
  isbn = "1-281-06024-0",
  year = "2007",
  title = "XSS attacks cross-site scripting exploits and defense",
  language = "eng",
  address = "Burlington, MA",
  author = "Fogie, Seth",
  keywords = "World Wide Web -- Security measures; Web sites -- Security measures; Electronic books",
}

@misc{w3csop,
  title = {{Same Origin Policy - Web Security}},
  url = {https://www.w3.org/Security/wiki/Same{\_}Origin{\_}Policy},
  urldate = {2018-02-07}
}

@article{Haldar,
  abstract = {Improperly validated user input is the underlying root cause for a wide variety of attacks on web-based applications. Static approaches for detecting this problem help at the time of development, but require source code and report a number of false positives. Hence, they are of little use for securing fully deployed and rapidly evolving applications. We propose a dynamic solution that tags and tracks user input at runtime and prevents its improper use to maliciously affect the execution of the program. Our implementation can be transparently applied to Java classfiles, and does not require source code. Benchmarks show that the overhead of this runtime enforcement is negligible and can prevent a number of attacks.},
  author = {Haldar, Vivek and Chandra, Deepak and Franz, Michael},
  file = {:Users/fredrikadolfsson/Library/Application Support/Mendeley Desktop/Downloaded/Haldar, Chandra, Franz - Unknown - Dynamic Taint Propagation for Java.pdf:pdf},
  title = {{Dynamic Taint Propagation for Java}},
  url = {https://pdfs.semanticscholar.org/bf4a/9c25889069bb17e44332a87dc6e2651dce86.pdf}
}

@article{Zhao2016,
  abstract = {—With the continuous development of J2EE technology, frequent attacks using security vulnerabilities in web applications have caused enormous economic loss to the users. Dynamic taint tracking is an important part to analyze the program dynamically. In this paper, we put forward a new dynamic solution in the Java virtual machine, warning external attacks and recording specific taint propagation path. This scheme combines static analysis techniques to collect reachable " source-derivation-sink " taint flow and reduce the runtime overhead. With the help of AOP (aspect-oriented programming) technology, we could only insert monitor codes to interested taint paths to improve the efficiency of instrumentation. Finally, we implemented this dynamic taint tracking approach to explore SQL injection and XSS vulnerabilities in web applications based on the Java Servlet Specification and proved practicality.},
  author = {Zhao, Jingling and Qi, Junxin and Zhou, Liang and Cui, Baojiang},
  doi = {10.1109/IMIS.2016.46},
  file = {:Users/fredrikadolfsson/Library/Containers/com.apple.mail/Data/Library/Mail Downloads/A8AC6BFA-5030-41CF-BD9B-46E576D066C7/Dynamic Taint Tracking.pdf:pdf},
  isbn = {9781509009848},
  journal = {Proceedings - 2016 10th International Conference on Innovative Mobile and Internet Services in Ubiquitous Computing, IMIS 2016},
  keywords = {AOP,Dynamic taint tracking,SQL injection and XSS,Static code analysis},
  pages = {96--101},
  title = {{Dynamic taint tracking of web application based on static code analysis}},
  year = {2016}
}
