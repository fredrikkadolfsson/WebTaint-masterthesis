@book{evans_2015, 
  place={INpolis, IN}, 
  title={Domain-driven design reference: definitions and patterns summaries}, 
  publisher={Dog Ear Publishing}, 
  author={Evans, Eric}, 
  year={2015}
}

@book{EvansEric2004Dd:t,
  publisher = "Addison-Wesley",
  isbn = "0-321-12521-5",
  year = "2004",
  title = "Domain-driven design : tackling complexity in the heart of software",
  language = "eng",
  address = "Boston, Mass.",
  author = "Evans, Eric",
  keywords = "Object-oriented programming (Computer science); Computer software -- Development; Software; Programvara",
}


@misc{Wilander2009,
  author = {Wilander, Johan},
  title = {{OWASP Sweden: Dom{\"{a}}ndriven s{\"{a}}kerhet / Domain-Driven Security}},
  url = {http://owaspsweden.blogspot.se/2009/09/domandriven-sakerhet-domain-driven.html},
  urldate = {2018-01-25},
  year = {2009}
}

@misc{Johnsson2009,
  author = {Johnsson, Dan Bergh},
  title = {{Dear Junior - Letters to a Junior Programmer: Introducing Domain Driven Security}},
  url = {http://dearjunior.blogspot.se/2009/09/introducing-domain-driven-security.html},
  urldate = {2018-01-25},
  year = {2009}
}

@misc{Tardell,
author = {Tardell, Simon},
title = {{Dynamic Taint Propagation | OP Tech Talks (Stockholm, Sweden) | Meetup}},
url = {https://www.meetup.com/en-AU/op-tech-talk/events/245435404/},
urldate = {2018-01-30}
}

@misc{perl,
  title = {perlsec - perldoc.perl.org},
  url = {http://perldoc.perl.org/perlsec.html},
  urldate = {2018-01-25}
}

@misc{ruby,
  title = {Locking Ruby in the Safe},
  url = {http://ruby-doc.com/docs/ProgrammingRuby/html/taint.html},
  urldate = {2018-01-25}
}

@misc{javassist,
  title = {{Javassist by jboss-javassist}},
  url = {http://jboss-javassist.github.io/javassist/},
  urldate = {2018-02-22}
}


@article{Clause2007,
  abstract = {Dynamic taint analysis is gaining momentum. Techniques based on dynamic tainting have been successfully used in the context of application security, and now their use is also being explored in different areas, such as program understanding, software testing, and debugging. Unfortunately, most existing approaches for dynamic tainting are defined in an ad-hoc manner, which makes it difficult to extend them, experiment with them, and adapt them to new contexts. Moreover, most existing approaches are focused on data-flow based tainting only and do not consider tainting due to control flow, which limits their applicability outside the security domain. To address these limitations and foster experimentation with dynamic tainting techniques, we defined and developed a general framework for dynamic tainting that (1) is highly flexible and customizable, (2) allows for performing both data-flow and control-flow based tainting conservatively, and (3) does not rely on any customized run-time system. We also present DYTAN, an implementation of our framework that works on x86 executables, and a set of preliminary studies that show how DYTAN can be used to implement different tainting-based approaches with limited effort. In the studies, we also show that DYTAN can be used on real software, by using FIREFOX as one of our subjects, and illustrate how the specific characteristics of the tainting approach used can affect efficiency and accuracy of the taint analysis, which further justifies the use of our framework to experiment with different variants of an approach.},
  author = {Clause, James and Li, Wanchun and Orso, Alessandro},
  doi = {10.1145/1273463.1273490},
  file = {:Users/fredrikadolfsson/Downloads/clause.li.orso.ISSTA07.pdf:pdf},
  isbn = {978-1-59593-734-6},
  journal = {Proceedings of the 2007 international symposium on Software testing and analysis},
  keywords = {dynamic tainting,general framework,information flow},
  pages = {196--206},
  title = {{Dytan: a generic dynamic taint analysis framework}},
  url = {http://doi.acm.org/10.1145/1273463.1273490},
  year = {2007}
}

@article{Venkataramani2008,
  abstract = {This paper presents FlexiTaint, a hardware accelerator for dynamic taint propagation. FlexiTaint is implemented as an in-order addition to the back-end of the processor pipeline, and the taints for memory locations are stored as a packed array in regular memory. The taint propagation scheme is specified via a software handler that, given the operation and the sourcespsila taints, computes the new taint for the result. To keep performance overheads low, FlexiTaint caches recent taint propagation lookups and uses a filter to avoid lookups for simple common-case behavior. We also describe how to implement consistent taint propagation in a multi-core environment. Our experiments show that FlexiTaint incurs average performance overheads of only 1{\%} for SPEC2000 benchmarks and 3.7{\%} for Splash-2 benchmarks, even when simultaneously following two different taint propagation policies.},
  author = {Venkataramani, Guru and Doudalis, Ioannis and Solihin, Yan and Prvulovic, Milos},
  doi = {10.1109/HPCA.2008.4658637},
  file = {:Users/fredrikadolfsson/Downloads/04658637.pdf:pdf},
  isbn = {9781424420704},
  issn = {15300897},
  journal = {Proceedings - International Symposium on High-Performance Computer Architecture},
  pages = {173--184},
  title = {{FlexiTaint: A programmable accelerator for dynamic taint propagation}},
  year = {2008}
}

@article{Pan2015,
  author = {Pan, Jinkun and Mao, Xiaoguang and Li, Weishi},
  doi = {10.1109/ICSESS.2015.7339024},
  file = {:Users/fredrikadolfsson/Downloads/07339024.pdf:pdf},
  isbn = {9781479983520},
  issn = {23270594},
  journal = {Proceedings of the IEEE International Conference on Software Engineering and Service Sciences, ICSESS},
  keywords = {analyst,taint analysis,taint path},
  pages = {145--148},
  title = {{Analyst-oriented taint analysis by taint path slicing and aggregation}},
  volume = {2015-November},
  year = {2015}
}

@misc{OpenWebApplicationSecurityProject,
  author = {{Open Web Application Security Project}},
  title = {{OWASP}},
  url = {https://www.owasp.org/index.php/Main{\_}Page},
  urldate = {2018-02-01}
}

@book{CrossMichael2007Dgtw,
  publisher = "Syngress Publishing",
  isbn = "1-281-06021-6",
  year = "2007",
  title = "Developer's guide to web application security",
  language = "eng",
  address = "Rockland, MA",
  author = "Cross, Michael",
}